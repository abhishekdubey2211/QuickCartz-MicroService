spring.application.name=PRODUCT-SERVICE

springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs

server.port = 8086
# Database Connection Settings with SSL enabled
spring.datasource.url=jdbc:mysql://localhost:3306/shopping?createDatabaseIfNotExist=true&useSSL=true&requireSSL=true

spring.datasource.username=root
spring.datasource.password=Abhishek@1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
app.secret.key=AbhishekDineshKumarDubey22112000
spring.rsocket.server.port=7000

spring.main.allow-circular-references=true
jwt.encrypted=false
# Possible values: validate, update, create, create-drop, none
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true 
logging.level.org.hibernate.SQL=DEBUG
spring.jpa.properties.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true 
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=50

# Connection Pooling (HikariCP) Times are in milliseconds
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000 
spring.datasource.hikari.pool-name=SpringBootHikariCP
spring.datasource.hikari.max-lifetime=2000000 
spring.datasource.hikari.connection-timeout=30000  

# Enable detailed logging of SQL and parameter values
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl=DEBUG
logging.level.org.hibernate.engine.transaction.internal.TransactionImpl=DEBUG
logging.level.org.hibernate.internal.SessionImpl=DEBUG


# Disable Spring Cloud Config import check (only if you're not using a config server)
spring.cloud.config.import-check.enabled=false

# Eureka server URL (Update the URL if Eureka Server runs on a different port)
eureka.client.service-url.defaultZone=http://localhost:9092/eureka/

# Register the instance with Eureka using its IP address instead of hostname
eureka.instance.prefer-ip-address=true

# Fetch the registry from Eureka (default is true; can be omitted unless explicitly needed)
eureka.client.fetch-registry=true

# Enable registration with Eureka (true by default; explicitly set to ensure registration)
eureka.client.register-with-eureka=true